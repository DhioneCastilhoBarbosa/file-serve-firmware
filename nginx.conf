server {
    listen 8080;
    server_name _;

    # CORS preflight genérico
    if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET,PUT,DELETE,OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type,Authorization,Origin,Accept" always;
        return 204;
    }

    # Tipos para extensões específicas
    types {
        text/plain hex;                     # .hex como texto (inline)
        application/octet-stream bin enfs;  # .bin/.enfs como download
    }

    # Decide Content-Disposition conforme extensão
    # (em vez de duplicar locations por regex)
    map $uri $firmware_disposition {
        default "";
        ~*\.hex$ "inline";
        ~*\.bin$ "attachment";
        ~*\.enfs$ "attachment";
    }

    # Único bloco com ^~ para priorizar este prefixo sobre regex
    location ^~ /firmware/ {
        root /usr/share/nginx/html;

        # Listagem de diretório (GET)
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;

        # CORS
        add_header Access-Control-Allow-Origin "*" always;

        # Headers de conteúdo por extensão
        add_header Content-Disposition $firmware_disposition;

        # WebDAV básico para upload PUT e criação de diretórios
        dav_methods PUT DELETE MKCOL;
        create_full_put_path on;

        # Limites de corpo
        client_max_body_size 512m;
        client_body_buffer_size 16m;

        # Para GET/HEAD, sirva arquivo ou diretório; PUT ignora try_files
        try_files $uri $uri/ =404;
    }
}
